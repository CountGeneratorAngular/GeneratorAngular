#set($V = "$")
app
	.config(["$routeProvider", function($routeProvider){
	        $routeProvider
            .when("/index",{
                templateUrl:"./Src/View/home.html",
                controller:'logsController as ctrl'
            })
            			
                        .when("/index/login",{
                templateUrl:"./Src/View/logsController.html",
                controller:'logsController as ctrl'
            })
            
                        .when('/index/listViewCrud',{
                templateUrl:'./Src/View/listViewCrud.html',
                controller:'controllerCrud as ctrlCrud',
                resolve: {
                    loaded: ['${V}http','sharedData','${V}route', '${V}location', function(${V}http, sharedData, ${V}route,${V}location){
	                    if(sharedData.get("indexName"))
	                    {
	                    
	                    var name = sharedData.get("indexName");
                        return ${V}http.get("./rest/"+sharedData.get("indexName")).then(function(response){
                            
                            sharedData.store('actualEntity',response.data);
                            sharedData.store('actualEntityName',name);
                            sharedData.remove("indexName");
                                                    #foreach($item in $external)
                                return ${V}http.get("./rest/$item").then(function(response){
                                console.log('$item'+" : "+response.data);
								sharedData.store("$item",response.data);
								console.log(sharedData.get('$item'));
                           #end
                           
                           #set($tempSize = $external.size() - 1)
                           console.log(sharedData.getAll());
                           return sharedData.get('$external.get($tempSize)');
                            #foreach($item in $external)
                            });
                            #end 
                           
                        })
                                                    }
                        else
                        {
                        
                        if(!sharedData.get("actualEntity"))
                        {
                        	${V}location.path('/index');
                        }
                        else
                        {
                        #foreach($item in $external)
                                return ${V}http.get("./rest/$item").then(function(response){
                                console.log('$item'+" : "+response.data);
								sharedData.store("$item",response.data);
								console.log(sharedData.get('$item'));
                           #end
                           
                           #set($tempSize = $external.size() - 1)
                           console.log(sharedData.getAll());
                           return sharedData.get('$external.get($tempSize)');
                            #foreach($item in $external)
                            });
                            #end
                        }
                        }
                    }]
                }
            })	
                                    .when('/index/createViewCrud',{
                templateUrl:'./Src/View/createViewCrud.html',
                controller:'controllerCrud as ctrlCrud',
                resolve: {
                    loaded: ['${V}http','sharedData','${V}route', '${V}location', function(${V}http, sharedData, ${V}route,${V}location){
	                    if(sharedData.get("indexName"))
	                    {
	                    
	                    var name = sharedData.get("indexName");
                        return ${V}http.get("./rest/"+sharedData.get("indexName")).then(function(response){
                            
                            sharedData.store('actualEntity',response.data);
                            sharedData.store('actualEntityName',name);
                            sharedData.remove("indexName");
                             
                           
                        })
                                                    }
                        else
                        {
                        
                        if(!sharedData.get("actualEntity"))
                        {
                        	${V}location.path('/index');
                        }
                        else
                        {
                        #foreach($item in $external)
                                return ${V}http.get("./rest/$item").then(function(response){
                                console.log('$item'+" : "+response.data);
								sharedData.store("$item",response.data);
								console.log(sharedData.get('$item'));
                           #end
                           
                           #set($tempSize = $external.size() - 1)
                           console.log(sharedData.getAll());
                           return sharedData.get('$external.get($tempSize)');
                            #foreach($item in $external)
                            });
                            #end
                        }
                        }
                    }]
                }
            })
            
            
#set($parent = [])   
#set($oldDepth = 2) 
#set($ParentName = "")  
#set($depthInt = 0)
#set($depthIntTest = 0)

#foreach($item in $structure)

	#if($item.get(0).equals("Entity") && $depthInt.parseInt($item.get(4))>=2)  
	#if($item.get(4)==2)
	#set($parent=[])
	#set($ParentName = "")
	#end
	
	
	#if( $oldDepthInt.parseInt($oldDepth) && $depthInt.parseInt($oldDepth)<$depthIntTest.parseInt($item.get(4)))
		#set($xxx = $parent.add($ParentName))
	#end
	#if($oldDepthInt.parseInt($oldDepth) && $depthInt.parseInt($oldDepth)>$depthIntTest.parseInt($item.get(4)))
	#set($tempmax = $depthInt.parseInt($oldDepth) - 1)
	#set($range = [$depthIntTest.parseInt($item.get(4))..$tempmax])
	#foreach($i in $range)
		
		#set($temp = $parent.size() - 1)
		#if($temp > 0)
			#set($xxx = $parent.remove($temp))
		#end
	#end
	#end
		#set($oldDepth=$item.get(4))
		#set($ParentName=$item.get(1))		
            .when('/index/#foreach($url in $parent)${url}/:${url}Id/#end${item.get(1)}/listView',{
                templateUrl:'./Src/View/${item.get(1)}ListView.html',
                controller:'${item.get(1)}Controller as ${item.get(1)}',
                resolve: {
                    loaded: ['${V}http','sharedData','${V}route', function(${V}http, sharedData, ${V}route){
                        return ${V}http.get("./rest/#foreach($url in $parent)${url}/"+$route.current.params.${url}Id+"/#end${item.get(1)}").then(function(response){
                            sharedData.store('${item.get(1)}',response.data);
                           #foreach($item in $external)
                                return ${V}http.get("./rest/$item").then(function(response){
								sharedData.store('$item',response.data);
                           #end
                           #set($tempSize = $external.size() - 1)
                           return sharedData.get('$external.get($tempSize)');
                            #foreach($item in $external)
                            });
                            #end
                           
                        })
                    } ]
                }
            })
                        .when('/index/#foreach($url in $parent)${url}/:${url}Id/#end${item.get(1)}/:${item.get(1)}Id/Edit',{
                templateUrl:'./Src/View/${item.get(1)}EditView.html',
                controller:'${item.get(1)}Controller as ${item.get(1)}',
                resolve: {
                    loaded: ['${V}http','sharedData','${V}route', function(${V}http, sharedData, ${V}route){
                        return ${V}http.get("./rest/#foreach($url in $parent)${url}/"+$route.current.params.${url}Id+"/#end${item.get(1)}/"+$route.current.params.${item.get(1)}Id).then(function(response){
							sharedData.store('${item.get(1)}',response.data);
                           
                           #foreach($item in $external)
                                return ${V}http.get("./rest/$item").then(function(response){
								sharedData.store('$item',response.data);
                           #end
                           #set($tempSize = $external.size() - 1)
                           return sharedData.get('$external.get($tempSize)');
                            #foreach($item in $external)
                            });
                            #end
                            

                        })
                    } ]
                }
            })
            .when('/index/#foreach($url in $parent)${url}/:${url}Id/#end${item.get(1)}/createView',{
                templateUrl:'./Src/View/${item.get(1)}CreateView.html',
                controller:'${item.get(1)}Controller as ${item.get(1)}',
                resolve: {
                    loaded: ['${V}http','sharedData','${V}route', function(${V}http, sharedData, ${V}route){
                        ${V}http.get("./rest/#foreach($url in $parent)${url}/"+$route.current.params.${url}Id+"/#end${item.get(1)}").then(function(response){
                            sharedData.store('${item.get(1)}',response.data);
                                                       #foreach($item in $external)
                                return ${V}http.get("./rest/$item").then(function(response){
								sharedData.store('$item',response.data);
                           #end
                           #set($tempSize = $external.size() - 1)
                           return sharedData.get('$external.get($tempSize)');
                            #foreach($item in $external)
                            });
                            #end
                        })
                    } ]
                }
            })
        
    #end
#end

			.otherwise({redirectTo:'/index'});			
	
	
	}])